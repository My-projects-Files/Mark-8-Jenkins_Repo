pipeline {
    agent any

    environment {
        DOCKER_IMG = "puyt"
        DOCKER_TAG = "latest"
        DEPLOY_NAME = "node-app"
        KUBE_DEPLOY = "kube-Mark-10.2/deployment.yml"
        KUBE_SERV = "kube-Mark-10.2/service.yml"
    }

    stages {
	stage('check') {
            steps {
                git url: 'https://github.com/saikamal33/Mark-10',
		branch: 'main' 
                  }
            }
        stage('pull docker') {
            steps {
                script {
                    sh 'docker ps'  
                    sh 'docker -D pull kamalsai33/puyt:latest' 
                }
            }
        }

        stage('deploy to kubernet') {  
            steps {
                script {
                    sh 'echo "Current Directory Contents:"'
                    sh 'ls -la'
                    sh 'kubectl get svc'
                    sh 'kubectl apply -f ${KUBE_DEPLOY} -f ${KUBE_SERV}'
                    sh 'kubectl rollout status deployment/${DEPLOY_NAME}'
                }
            }
        }
    }

    post {
        success {
            echo 'pipeline complete'
		echo "waiting for 3 min before remove Kubernet deployments"
		sh 'sleep 180' // sleep for 3 min before clean up of container
		
		// clean up the container 
		echo "To clean up kuber deployments, network and docker images"	
		sh '''
		    kubectl delete deployment ${KUBE_DEPLOY} || true
		    kubectl delete svc ${KUBE_SERV} || true
		    docker rmi kamalsai33/puyt:latest || true
		'''
	    }
	}
        failure {
            echo 'pipeline failed'
        }
    }
}
